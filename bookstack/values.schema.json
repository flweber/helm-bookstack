{
  "$schema": "https://json-schema.org/draft-07/schema#",
  "type": "object",
  "properties": {
    "global": {
      "type": "object",
      "description": "Global settings for all applications.",
      "additionalProperties": false,
      "properties": {
        "imageRegistry": {
          "type": "string",
          "description": "The image registry to use for all applications. This is used to pull the images from the registry.",
          "default": ""
        },
        "imagePullSecrets": {
          "type": "array",
          "description": "ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for them to use. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod",
          "items": {
            "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/v1.31.6/_definitions.json#/definitions/io.k8s.api.core.v1.LocalObjectReference"
          },
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge",
          "default": []
        },
        "defaultStorageClass": {
          "type": "string",
          "description": "The default storage class to use for all applications. This is used to create persistent volumes for the applications.",
          "default": ""
        },
        "clusterDomain": {
          "type": "string",
          "description": "The domain name of the cluster. This is used to resolve services within the cluster.",
          "default": "cluster.local"
        }
      }
    },
    "bookstack": {
      "type": "object",
      "description": "",
      "additionalProperties": false,
      "properties": {
        "image": {
          "type": "object",
          "description": "",
          "additionalProperties": false,
          "properties": {
            "registry": {
              "type": "string",
              "description": "The image registry to use for all applications. This is used to pull the images from the registry.",
              "default": ""
            },
            "repository": {
              "type": "string",
              "description": "The repository of the image.",
              "default": "solidnerd"
            },
            "name": {
              "type": "string",
              "description": "The name of the image.",
              "default": "bookstack"
            },
            "tag": {
              "type": "string",
              "description": "Tag of the application you want to deploy. Could be a version number, commit sha or bad practice like \"latest\", \"dev\", \"qs\", \"prd\"",
              "default": ""
            },
            "imagePullSecrets": {
              "type": "array",
              "description": "ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for them to use. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod",
              "items": {
                "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/v1.31.6/_definitions.json#/definitions/io.k8s.api.core.v1.LocalObjectReference"
              },
              "x-kubernetes-patch-merge-key": "name",
              "x-kubernetes-patch-strategy": "merge",
              "default": []
            },
            "pullPolicy": {
              "type": "string",
              "description": "",
              "default": "Always"
            }
          }
        },
        "replicaCount": {
          "type": "integer",
          "description": "The number of replicas to run.",
          "default": 1
        },
        "updateStrategy": {
          "description": "The update strategy to use for the deployment.",
          "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/v1.31.6/_definitions.json#/definitions/io.k8s.api.apps.v1.DeploymentStrategy"
        },
        "externalDatabase": {
          "type": "object",
          "description": "If you want to use an external database, set this to true and provide the connection details.",
          "additionalProperties": false,
          "properties": {
            "host": {
              "type": "string",
              "description": "The host (including port) of the external database."
            },
            "database": {
              "type": "string",
              "description": "The name of the database."
            },
            "username": {
              "type": "string",
              "description": "The username for the external database."
            },
            "password": {
              "type": "string",
              "description": "The password for the external database."
            }
          },
          "required": [
            "host",
            "database",
            "username",
            "password"
          ]
        },
        "externalRedis": {
          "type": "object",
          "description": "If you want to use an external redis, set this to true and provide the connection details.",
          "additionalProperties": false,
          "properties": {
            "servers": {
              "type": "string",
              "description": "One or more redis servers. See bookstack documentation for more details."
            }
          },
          "required": [
            "servers"
          ]
        },
        "config": {
          "type": "object",
          "description": "Bookstack application configuration section.",
          "properties": {
            "app": {
              "type": "object",
              "additionalProperties": true,
              "description": "These settings will be provided as environment variables to bookstack. All of them will be automatically prefixed with \"APP_\" and the upper-case version of the provided key. e.g. \"url\" will be \"APP_URL\". If you have variables like \"APP_DEFAULT_DARK_MODE\" replace underscores with \".\" e.g. \"default.dark.mode\".",
              "properties": {
                "key": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "If not provided a random key will be generated on the first deployment",
                  "default": null
                },
                "url": {
                  "type": "string",
                  "description": ""
                }
              },
              "required": [
                "url"
              ]
            },
            "additional": {
              "type": "object",
              "additionalProperties": true,
              "description": "Here you can define environment variables by yourself which don't have a specific prefix e.g. \"STORAGE_TYPE\". Set it like key-value yaml pairs. For example: \"STORAGE_TYPE\": \"local\". Don't replace \"_\" with \".\"!"
            },
            "additionalSecrets": {
              "type": "object",
              "additionalProperties": true,
              "description": "It's like \"additional\" section but the values will be stored in a Kubernetes secret. Base64 encoding will be done by the chart, so you have to input the clear values."
            }
          },
          "required": [
            "app"
          ]
        },
        "mail": {
          "type": "object",
          "description": "Bookstack mail settings. If your needed values are not listed here, you can also set them if the values are prefixed with \"MAIL_\". If you need \"MAIL_VERIFY_SSL\" write it as \"verify.ssl\".",
          "additionalProperties": true,
          "properties": {
            "driver": {
              "type": "string",
              "description": "",
              "default": "smtp",
              "enum": [
                "smtp",
                "sendmail"
              ]
            },
            "host": {
              "type": "string",
              "description": "",
              "default": ""
            },
            "from": {
              "type": "string",
              "description": "",
              "default": "bookstack@cluster.local"
            },
            "from.name": {
              "type": "string",
              "description": "",
              "default": "BookStack"
            },
            "username": {
              "type": "string",
              "description": "",
              "default": "changeme"
            },
            "password": {
              "type": "string",
              "description": "",
              "default": "changeme"
            },
            "port": {
              "type": "integer",
              "description": "",
              "default": 1025
            },
            "encryption": {
              "type": "string",
              "description": "",
              "default": "null",
              "enum": [
                "tls",
                "null"
              ]
            },
            "verify.ssl": {
              "type": "boolean",
              "description": "",
              "default": true
            },
            "sendmail.command": {
              "type": "string"
            }
          },
          "required": [
            "driver"
          ]
        },
        "auth": {
          "type": "object",
          "description": "",
          "additionalProperties": false,
          "properties": {
            "method": {
              "type": "string",
              "description": "See for more information: https://github.com/BookStackApp/BookStack/blob/development/.env.example.complete#L149"
            },
            "auto.initiate": {
              "type": "boolean",
              "default": false,
              "description": "See for more information: https://github.com/BookStackApp/BookStack/blob/development/.env.example.complete#L153"
            },
            "oidc": {
              "type": "object",
              "description": "Here you can define BookStack OIDC settings. To set additional values not listed here define them in lowercase and replace \"_\" with \".\" in variable names. E.g. \"OIDC_ISSUER_DISCOVER\" as \"issuer.discover\"",
              "required": ["enabled"],
              "additionalProperties": true,
              "properties": {
                "name": {
                  "type": "string",
                  "description": "",
                  "default": "Open ID Connect"
                },
                "clientId": {
                  "type": "string",
                  "description": "",
                  "default": ""
                },
                "clientSecret": {
                  "type": "string",
                  "description": "",
                  "default": ""
                },
                "issuer": {
                  "type": "string",
                  "description": "",
                  "default": ""
                }
              }
            },
            "azure": {
              "description": "Enable or disable social auth option. You can set additional values like auto registration by replacing \"_\" with \".\" and in lowercase e.g. \"AZURE_AUTO_REGISTER\" as \"auto.register\". You don't need the social auth key as a prefix.",
              "$ref": "#/definitions/socialAuth"
            },
            "discord": {
              "description": "Enable or disable social auth option. You can set additional values like auto registration by replacing \"_\" with \".\" and in lowercase e.g. \"DISCORD_AUTO_REGISTER\" as \"auto.register\". You don't need the social auth key as a prefix.",
              "$ref": "#/definitions/socialAuth"
            },
            "facebook": {
              "description": "Enable or disable social auth option. You can set additional values like auto registration by replacing \"_\" with \".\" and in lowercase e.g. \"FACEBOOK_AUTO_REGISTER\" as \"auto.register\". You don't need the social auth key as a prefix.",
              "$ref": "#/definitions/socialAuth"
            },
            "github": {
              "description": "Enable or disable social auth option. You can set additional values like auto registration by replacing \"_\" with \".\" and in lowercase e.g. \"GITHUB_AUTO_REGISTER\" as \"auto.register\". You don't need the social auth key as a prefix.",
              "$ref": "#/definitions/socialAuth"
            },
            "gitlab": {
              "description": "Enable or disable social auth option. You can set additional values like auto registration by replacing \"_\" with \".\" and in lowercase e.g. \"GITLAB_AUTO_REGISTER\" as \"auto.register\". You don't need the social auth key as a prefix.",
              "$ref": "#/definitions/socialAuth"
            },
            "google": {
              "description": "Enable or disable social auth option. You can set additional values like auto registration by replacing \"_\" with \".\" and in lowercase e.g. \"GOOGLE_AUTO_REGISTER\" as \"auto.register\". You don't need the social auth key as a prefix.",
              "$ref": "#/definitions/socialAuth"
            },
            "okta": {
              "description": "Enable or disable social auth option. You can set additional values like auto registration by replacing \"_\" with \".\" and in lowercase e.g. \"OKTA_AUTO_REGISTER\" as \"auto.register\". You don't need the social auth key as a prefix.",
              "$ref": "#/definitions/socialAuth"
            },
            "slack": {
              "description": "Enable or disable social auth option. You can set additional values like auto registration by replacing \"_\" with \".\" and in lowercase e.g. \"SLACK_AUTO_REGISTER\" as \"auto.register\". You don't need the social auth key as a prefix.",
              "$ref": "#/definitions/socialAuth"
            },
            "twitch": {
              "description": "Enable or disable social auth option. You can set additional values like auto registration by replacing \"_\" with \".\" and in lowercase e.g. \"TWITCH_AUTO_REGISTER\" as \"auto.register\". You don't need the social auth key as a prefix.",
              "$ref": "#/definitions/socialAuth"
            },
            "twitter": {
              "description": "Enable or disable social auth option. You can set additional values like auto registration by replacing \"_\" with \".\" and in lowercase e.g. \"TWITTER_AUTO_REGISTER\" as \"auto.register\". You don't need the social auth key as a prefix.",
              "$ref": "#/definitions/socialAuth"
            },
            "ldap": {
              "type": "object",
              "description": "Enable or disable social auth option. You can set additional values like email attribute by replacing \"_\" with \".\" and in lowercase e.g. \"LDAP_EMAIL_ATTRIBUTE\" as \"email.attribute\". You don't need the \"LDAP_\" key as a prefix.",
              "additionalProperties": true,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": "false",
                  "description": "Wether LDAP auth is enabled"
                },
                "server": {
                  "type": "string",
                  "default": "",
                  "description": "The LDAP server to connect to."
                },
                "dn": {
                  "type": "string",
                  "default": "",
                  "description": "User DN used for authentication"
                },
                "pass": {
                  "type": "string",
                  "default": "",
                  "description": "Password used for authentication"
                },
                "base.dn": {
                  "type": "string",
                  "default": "",
                  "description": "LDAP Base search dn"
                }
              },
              "required": ["enabled"]
            }
          }
        },
        "extraEnv": {
          "type": "object",
          "additionalProperties": {
            "type": ["string", "object"],
            "description": "Extra environment variables for bookstack. Could be a simple string or a valueFrom..."
          }
        },
        "persistence": {
          "type": "object",
          "description": "Defines volume settings for data persistence in bookstack",
          "additionalProperties": false,
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": true,
              "description": "Wether volume will be created"
            },
            "size": {
              "type": "string",
              "default": "10Gi",
              "description": "The size of the volume which will be created. Be careful some storage interfaces don't support resizing."
            },
            "storageClass": {
              "type": "string",
              "description": "",
              "default": ""
            },
            "accessMode": {
              "type": "string",
              "default": "ReadWriteMany",
              "description": "Access mode to define how many times the volume could be mounted."
            }
          },
          "required": ["enabled", "size", "accessMode"]
        }
      }
    },
    "ingress": {
      "type": "object",
      "description": "Here you can define the ingress settings for your application. This is only needed if you want to expose your application to the outside world.",
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable the ingress",
          "default": false
        },
        "annotations": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "You can add these Kubernetes annotations to specific Ingress objects to customize their behavior.\n!!! tip Annotation keys and values can only be strings. Other types, such as boolean or numeric values must be quoted, i.e. \"true\", \"false\", \"100\". More info: https://github.com/kubernetes/ingress-nginx/blob/main/docs/user-guide/nginx-configuration/annotations.md",
            "type": "object"
          }
        },
        "tls": {
          "description": "tls represents the TLS configuration. Currently the Ingress only supports a single TLS port, 443. If multiple members of this list specify different hosts, they will be multiplexed on the same port according to the hostname specified through the SNI TLS extension, if the ingress controller fulfilling the ingress supports SNI.",
          "items": {
            "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/v1.31.6/_definitions.json#/definitions/io.k8s.api.networking.v1.IngressTLS"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "class": {
          "type": "string",
          "description": "The class of the ingress. This is used to select the ingress controller that should handle this ingress. If not set, the default ingress class will be used."
        },
        "hostname": {
          "type": "string",
          "description": "The hostname for the ingress. This is used to route traffic to the correct service."
        },
        "path": {
          "type": "string",
          "description": "The path for the ingress. This is used to route traffic to the correct service.",
          "default": "/"
        },
        "pathType": {
          "type": "string",
          "description": "The path type for the ingress. This is used to route traffic to the correct service.",
          "enum": [
            "Exact",
            "Prefix",
            "ImplementationSpecific"
          ],
          "default": "Prefix"
        }
      },
      "required": [
        "enabled",
        "hostname",
        "path",
        "pathType"
      ]
    },
    "service": {
      "type": "object",
      "description": "Here you can define the service settings for your application.",
      "additionalProperties": false,
      "properties": {
        "port": {
          "type": "integer",
          "description": "The port that the service should listen on.",
          "default": 8080
        },
        "type": {
          "type": "string",
          "enum": [
            "ClusterIP",
            "NodePort",
            "LoadBalancer",
            "Headless"
          ],
          "description": "The type of the service. This defines how the service is exposed or not.",
          "default": "ClusterIP"
        },
        "loadBalancerIP": {
          "type": [
            "string",
            "null"
          ],
          "description": "LoadBalancerIP is the IP address that will be assigned to the service when it is created. This is only used if the service type is LoadBalancer.",
          "default": ""
        },
        "nodePort": {
          "type": [
            "integer",
            "string",
            "null"
          ],
          "description": "NodePort is the port that will be assigned to the service when it is created. This is only used if the service type is NodePort.",
          "default": ""
        },
        "clusterIP": {
          "type": [
            "string",
            "null"
          ],
          "description": "ClusterIP is the IP address that will be assigned to the service when it is created. This is only used if the service type is ClusterIP.",
          "default": ""
        }
      },
      "required": [
        "port",
        "type"
      ]
    },
    "db": {
      "type": "object",
      "description": "Here you can define the database settings for your application.",
      "additionalProperties": true,
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether this deployment is enabled",
          "default": true
        }
      },
      "required": [
        "enabled"
      ]
    },
    "redis": {
      "type": "object",
      "description": "Here you can define the redis settings for your application.",
      "additionalProperties": true,
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether this deployment is enabled",
          "default": true
        }
      },
      "required": [
        "enabled"
      ]
    }
  },
  "required": [
    "global",
    "bookstack",
    "db",
    "redis",
    "service",
    "ingress"
  ],
  "definitions": {
    "socialAuth": {
      "type": "object",
      "additionalProperties": true,
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether this auth option is enabled",
          "default": false
        },
        "appId": {
          "type": "string",
          "description": "",
          "default": ""
        },
        "appSecret": {
          "type": "string",
          "description": "",
          "default": ""
        }
      }
    }
  }
}